name: mooc-work-answer to EXE

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-2022

    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 设置 Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"

      - name: 缓存 pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller==4.5
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: 获取当前 Git 标签
        id: get_tag
        run: echo "TAG_NAME=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: 获取提交日志
        id: get_changelog
        run: echo "CHANGELOG=$(git log -1 --pretty=format:%B)" >> $GITHUB_ENV

      - name: 注入环境变量
        uses: NicoG60/simple-template-renderer@v1
        with:
          input: StartWorkLite.spec
        env:
          PYINSTALL_KEY: ${{ secrets.PYINSTALL_KEY }}
          TAG: ${{ env.TAG_NAME }}

      - name: 打包 EXE
        run: pyinstaller StartWorkLite.spec

      - name: 创建 GitHub 发布
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          body: ${{ env.CHANGELOG }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 上传发布资产
        uses: csexton/release-asset-action@v3
        with:
          pattern: "dist/*"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          release-url: ${{ steps.create_release.outputs.upload_url }}

      - name: 清理构建文件
        run: |
          rmdir /s /q build
          rmdir /s /q __pycache__
